// automatically generated by the FlatBuffers compiler, do not modify

import { Comment } from './comment.js';
import { TopicPost } from './topic-post.js';


export enum Message {
  NONE = 0,
  TopicPost = 1,
  Comment = 2
}

export function unionToMessage(
  type: Message,
  accessor: (obj:Comment|TopicPost) => Comment|TopicPost|null
): Comment|TopicPost|null {
  switch(Message[type]) {
    case 'NONE': return null; 
    case 'TopicPost': return accessor(new TopicPost())! as TopicPost;
    case 'Comment': return accessor(new Comment())! as Comment;
    default: return null;
  }
}

export function unionListToMessage(
  type: Message, 
  accessor: (index: number, obj:Comment|TopicPost) => Comment|TopicPost|null, 
  index: number
): Comment|TopicPost|null {
  switch(Message[type]) {
    case 'NONE': return null; 
    case 'TopicPost': return accessor(index, new TopicPost())! as TopicPost;
    case 'Comment': return accessor(index, new Comment())! as Comment;
    default: return null;
  }
}
