// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { MessageType, unionToMessageType, unionListToMessageType } from './message-type.js';


export class PubsubMessage {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PubsubMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPubsubMessage(bb:flatbuffers.ByteBuffer, obj?:PubsubMessage):PubsubMessage {
  return (obj || new PubsubMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPubsubMessage(bb:flatbuffers.ByteBuffer, obj?:PubsubMessage):PubsubMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PubsubMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

messageType():MessageType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : MessageType.NONE;
}

message<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

timestamp():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

static startPubsubMessage(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addMessageType(builder:flatbuffers.Builder, messageType:MessageType) {
  builder.addFieldInt8(0, messageType, MessageType.NONE);
}

static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, messageOffset, 0);
}

static addTimestamp(builder:flatbuffers.Builder, timestamp:bigint) {
  builder.addFieldInt64(2, timestamp, BigInt('0'));
}

static endPubsubMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishPubsubMessageBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedPubsubMessageBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createPubsubMessage(builder:flatbuffers.Builder, messageType:MessageType, messageOffset:flatbuffers.Offset, timestamp:bigint):flatbuffers.Offset {
  PubsubMessage.startPubsubMessage(builder);
  PubsubMessage.addMessageType(builder, messageType);
  PubsubMessage.addMessage(builder, messageOffset);
  PubsubMessage.addTimestamp(builder, timestamp);
  return PubsubMessage.endPubsubMessage(builder);
}
}
